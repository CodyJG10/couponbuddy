@using BrochureBuddy.Api;
@using BrochureBuddy.Web.Data;
@using BrochureBuddy.Util;

@inject ApplicationDbContext _context;

@model IEnumerable<BrochureBuddy.Entities.LocationAd>

@{
    ViewData["Title"] = "ViewAds";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ViewAds</h2>

<p>
    <a asp-action="CreateAd">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                <label>Content</label>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model)
{
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @{ 
                    ImageLoader imgLoader = new ImageLoader();
                    var location = _context.Locations.Single(x => x.Id == item.LocationId);
                    string locationName = VendorToContainer.GetContainerName(location.Name);
                    byte[] imgBytes = imgLoader.LoadImage(locationName, item.Name).GetAwaiter().GetResult();
                    string imgUrl = "data:image/png;base64," + Convert.ToBase64String(imgBytes);
                }
                <img src="@imgUrl" width="250" height="250"/>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="DeleteAd" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
